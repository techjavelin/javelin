import { a } from '@aws-amplify/backend';

export const VulnerabilityCategory = a.enum([
  'AUTH','INPUT_VALIDATION','CRYPTO','CONFIG','ACCESS_CONTROL','OTHER'
]);

export const Severity = a.enum([
  'CRITICAL','HIGH','MEDIUM','LOW','INFO'
]);

export const VulnerabilityTemplate = a.model({
  title: a.string().required(),
  category: a.ref('VulnerabilityCategory').required(),
  severity: a.ref('Severity').required(),
  cvssVector: a.string(),
  owaspCategory: a.string(),
  description: a.string(), // markdown
  impact: a.string(), // markdown
  likelihood: a.string(),
  remediation: a.string(),
  references: a.string().array(),
  tags: a.string().array(),
  createdBy: a.string(),
  isGlobal: a.boolean().required(),
  createdAt: a.datetime(),
  updatedAt: a.datetime(),
})
  .authorization(allow => [
  allow.group('admin'),
  allow.group('pentester').to(['create','read','update']),
  // Owner constraint simplified (owner field: createdBy). If we need custom predicate later, introduce function-based auth.
  allow.ownersDefinedIn('createdBy').to(['update','delete']),
  allow.authenticated().to(['read']),
  ]);
