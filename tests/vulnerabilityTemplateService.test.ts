import { describe, it, expect, vi, beforeEach } from 'vitest'
import { useVulnerabilityTemplateService } from '@/composables/useVulnerabilityTemplateService'

vi.mock('aws-amplify/data', () => ({
  generateClient: () => ({
    models: {
      VulnerabilityTemplate: {
        get: vi.fn().mockResolvedValue({ data: { id: 'vt1', title: 'Original' } }),
        update: vi.fn().mockResolvedValue({ data: { id: 'vt1', title: 'Changed' } }),
        delete: vi.fn().mockResolvedValue({ data: { id: 'vt1' } })
      }
    }
  })
}))

vi.mock('@/composables/useAuthorization', () => ({
  useAuthorization: () => ({
    has: () => true,
    primeContext: vi.fn().mockResolvedValue(undefined)
  })
}))

vi.mock('@/composables/useAuth', () => ({
  useAuth: () => ({
    currentUser: { value: { username: 'tester' } },
    loadCurrentUser: vi.fn().mockResolvedValue(undefined)
  })
}))

describe('useVulnerabilityTemplateService', () => {
  let service: ReturnType<typeof useVulnerabilityTemplateService>
  beforeEach(() => {
    service = useVulnerabilityTemplateService()
  })

  it('updates template', async () => {
    const res = await service.updateTemplate({ id: 'vt1', title: 'Changed' })
    expect(res.data?.title).toBe('Changed')
  })

  it('deletes template', async () => {
    const res = await service.deleteTemplate('vt1')
    expect(res.data?.id).toBe('vt1')
  })
})
